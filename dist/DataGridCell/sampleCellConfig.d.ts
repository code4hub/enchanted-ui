import React from 'react';
import { ExtendedGridColDef } from '../DataGrid';
export declare const baseColumnConfig: ExtendedGridColDef;
export declare const iconEndColumnConfig: ExtendedGridColDef;
export declare const avatarColumnConfig: ExtendedGridColDef;
export declare const iconColumnConfig: ExtendedGridColDef;
export declare const endActionColumnConfig: ExtendedGridColDef;
export declare const allColumnConfig: ExtendedGridColDef;
export declare const sampleColumnsByDefaultLeft: ExtendedGridColDef[];
export declare const sampleColumnsModifiedRight: ExtendedGridColDef[];
export declare const sampleRowContainsAll: {
    id: string;
    baseColumn: string;
    iconEndColumn: string;
    'iconEnd-iconEndColumn': React.JSX.Element;
    'iconEnd-all': React.JSX.Element;
    avatarColumn: string;
    'avatar-avatarColumn': React.JSX.Element;
    'avatar-all': React.JSX.Element;
    iconStartColumn: string;
    'iconStart-iconStartColumn': React.JSX.Element;
    'iconStart-all': React.JSX.Element;
    endActionColumn: string;
    'endActions-endActionColumn': React.JSX.Element[];
    'endActions-all': React.JSX.Element[];
    all: string;
}[];
export declare const sampleRowsDisabled: {
    disabled: boolean;
    id: string;
    baseColumn: string;
    iconEndColumn: string;
    'iconEnd-iconEndColumn': React.JSX.Element;
    'iconEnd-all': React.JSX.Element;
    avatarColumn: string;
    'avatar-avatarColumn': React.JSX.Element;
    'avatar-all': React.JSX.Element;
    iconStartColumn: string;
    'iconStart-iconStartColumn': React.JSX.Element;
    'iconStart-all': React.JSX.Element;
    endActionColumn: string;
    'endActions-endActionColumn': React.JSX.Element[];
    'endActions-all': React.JSX.Element[];
    all: string;
}[];
export declare const columnTest1: ExtendedGridColDef;
export declare const columnTest2: ExtendedGridColDef;
export declare const columnTest3: ExtendedGridColDef;
export declare const columnTest4: ExtendedGridColDef;
export declare const columnTest5: ExtendedGridColDef;
export declare const sampleRowMultiStartIconAndTooltip: {
    id: string;
    column1: string;
    'tooltip-column1': string;
    'iconStart-column1': React.JSX.Element;
    column2: string;
    'tooltip-column2': string;
    'iconStart-column2': React.JSX.Element;
    column3: string;
    'tooltip-column3': string;
    'iconStart-column3': React.JSX.Element;
    column4: string;
    'tooltip-column4': string;
    'iconStart-column4': React.JSX.Element;
    'endActions-column4': React.JSX.Element[];
    'avatar-column4': React.JSX.Element;
    'iconEnd-column4': React.JSX.Element;
    column5: string;
    'tooltip-column5': string;
    'iconStart-column5': React.JSX.Element;
    'endActions-column5': React.JSX.Element[];
    'avatar-column5': React.JSX.Element;
    'iconEnd-column5': React.JSX.Element;
}[];
export declare const sampleColumnsMultiStartIconAndTooltip: ExtendedGridColDef[];
